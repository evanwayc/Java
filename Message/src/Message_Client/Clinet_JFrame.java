package Message_Client;

import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

public class Clinet_JFrame extends javax.swing.JFrame {

    String FileAbsolutePath = null;
    Socket Msg_Socket = null;
    Socket File_Socket = null;

    int Msg_Port = 888;
    int File_Port = 999;

    public Clinet_JFrame() {
        initComponents();

        try {
            Msg_Socket = new Socket("localhost", Msg_Port);
            Show.setText(Show.getText() + "\n" + "Msg_Socket 999 與Server連線中...");
            new Clinet_ReceiveMsg_DS_Thread(Msg_Socket).start();
        } catch (IOException ex) {
            Logger.getLogger(Clinet_JFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void SendMsg() {
        String InputMsg = MsgTF.getText().trim();
        String GetMsg = Clinet_SendMsg_DS.ClinetSendMsg(Msg_Socket, InputMsg);
        Show.setText(Show.getText() + "\n" + GetMsg);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MsgTF = new javax.swing.JTextField();
        SendMsgB = new javax.swing.JButton();
        SendFileB = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Show = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Client");

        SendMsgB.setText("送出");
        SendMsgB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendMsgBActionPerformed(evt);
            }
        });

        SendFileB.setText("檔案");
        SendFileB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendFileBActionPerformed(evt);
            }
        });

        Show.setColumns(20);
        Show.setRows(5);
        jScrollPane1.setViewportView(Show);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(SendFileB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MsgTF, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SendMsgB, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(SendFileB, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(MsgTF, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(SendMsgB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SendMsgBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendMsgBActionPerformed
        // TODO add your handling code here:
        SendMsg();
        MsgTF.setText("");
    }//GEN-LAST:event_SendMsgBActionPerformed

    private void SendFileBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendFileBActionPerformed

        try {
            File_Socket = new Socket("localhost", File_Port);
            Show.setText(Show.getText() + "\n" + "File_Socket 999 與Server連線中...");
        } catch (IOException ex) {
            Logger.getLogger(Clinet_JFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        String FileAbsolutePath = null;

        JFileChooser JFC = new JFileChooser();
        JFC.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int returnValue = JFC.showOpenDialog(null);//叫出filechooser
        if (returnValue == JFileChooser.APPROVE_OPTION) //判斷是否選擇檔案
        {
            FileAbsolutePath = JFC.getSelectedFile().getAbsolutePath();
            System.out.println(FileAbsolutePath);
        }

        Client_SendFile_DS.ClinetSendFile(File_Socket, FileAbsolutePath);


    }//GEN-LAST:event_SendFileBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Clinet_JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Clinet_JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Clinet_JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Clinet_JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Clinet_JFrame().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField MsgTF;
    private javax.swing.JButton SendFileB;
    private javax.swing.JButton SendMsgB;
    private javax.swing.JTextArea Show;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
